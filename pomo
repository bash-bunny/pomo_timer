#!/usr/bin/bash

# Get the timer from the user
TIME="${1}"

# Help on how to use the command
print_help() {
	printf "Usage: \n# Print help or notify pomodoro sessions running\npomo\n# Focus 45 minutes\npomo 45m\n# Focus 1 hour\npomo 1h\n"
}

# Check if there are other pomodoro running
check_pomo() {
	atid=$(atq | awk '{print $1}' | xargs -I{} bash -c "at -c {} | grep Pomo &>/dev/null && echo {}")
	if [[ -n "${atid}" ]]; then
		timer=$(atq "${atid}" | awk '{print $5}')
		notify-send "Pomo" "Pomodoro sesion running until: ${timer}"
		exit 1
	fi
	exit 0
}

# Convert m or h into minutes and hours
# and send a notification
focus_time() {
	# Time to focus
  num="${1}"
	# Unit timer
	unit="${2}"

	case "${unit}" in
		"m")
			send_notification "${num}" "minutes"
			;;
		"h")
			send_notification "${num}" "hours"
			;;
		*)
			print_help
			;;
	esac
}

# Notify the user and schedule the command
send_notification() {
	num="${1}"
	unit="${2}"
	# Set finish notification
	echo 'notify-send "Pomo" "Focus is over"' | at now + "${num}" "${unit}" &>/dev/null
	# Check the pomodore session
	check_pomo
}

# If no time specified by the user RTFM
if [[ -z "${TIME}" ]]; then
	if $(check_pomo);  then
		print_help
	fi
	exit 1
fi

# Extract the number and unit
num="${TIME//[!0-9]/}"
unit="${TIME//[0-9]/}"

# Check other pomodoro sessions
if ! $(check_pomo) ; then
	exit 1
else
	# Get the focus time and start the pomodoro
	focus_time "${num}" "${unit}"
fi
